trigger:
  - master

name: $(TeamProject)_$(Build.DefinitionName)_$(Date:yyyyMMdd)$(Rev:.r)

variables:
  - name: "APP_NAME"
    value: "docker-webapp-test" # name of the app
  - name: "APP_SETTINGS"
    value: "WEBSITES_PORT=5000" # settings for the app
  - name: "ACR_NAME"
    value: "dockerwebapptestacr" # name of the Azure Container Registry
  - name: "IMAGE_NAME"
    value: "webapp-test" # name of the Docker Image to create
  - name: "LOCATION"
    value: "uksouth" # where does stuff need deploying?

pool:
  vmImage: "Ubuntu-20.04"

stages:
  - stage: "SetupRGACR"
    displayName: "Setup Azure" # friendly name to display in the UI
    jobs:
      - job: "CreateResourceGroup"
        displayName: "Resource Group - Setup/Check "
        steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: "$(SUBSCRIPTION_NAME)"
              addSpnToEnvironment: true
              scriptType: "bash"
              scriptLocation: "inlineScript"
              inlineScript: |
                az group create --name $(APP_NAME)-rg --location $(LOCATION)
              displayName: "Resource Group - Use Azure CLI to setup or check"
      - job: "SetupCheckAzureContainerRegistry"
        displayName: "Azure Container Registry - Setup/Check"
        dependsOn:
          - "CreateResourceGroup"
        steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: "$(SUBSCRIPTION_NAME)"
              addSpnToEnvironment: true
              scriptType: "bash"
              scriptLocation: "inlineScript"
              inlineScript: |
                az acr create --resource-group $(APP_NAME)-rg --name $(ACR_NAME) --sku Basic --admin-enabled true
              displayName: "Azure Container Registry - Use Azure CLI to setup or check"

  - stage: "BuildContainer"
    displayName: "Build, Tag and Push the conatiner image" # friendly name to display in the UI
    dependsOn:
      - "SetupRGACR"
    jobs:
      - job: "BuildPushImage"
        displayName: "Build, tag and push the image"
        steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: "$(SUBSCRIPTION_NAME)"
              addSpnToEnvironment: true
              scriptType: "bash"
              scriptLocation: "inlineScript"
              inlineScript: |
                az acr login --name $(ACR_NAME) 
                docker image build -t $(IMAGE_NAME) ./
                docker image tag $(IMAGE_NAME) $(ACR_NAME).azurecr.io/$(IMAGE_NAME):latest
                docker image tag $(IMAGE_NAME) $(ACR_NAME).azurecr.io/$(IMAGE_NAME):$(date '+%Y-%m-%d-%H%M')
                docker image push $(ACR_NAME).azurecr.io/$(IMAGE_NAME):latest 
                docker image push $(ACR_NAME).azurecr.io/$(IMAGE_NAME):$(date '+%Y-%m-%d-%H%M')
              displayName: "Use Azure CLI to build and push the container image"

  - stage: "SetupAppServices"
    displayName: "Azure App Services" # friendly name to display in the UI
    dependsOn:
      - "SetupRGACR"
      - "BuildContainer"
    jobs:
      - job: "CreateAppServicePlan"
        displayName: "App Service Plan - Setup/Check "
        steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: "$(SUBSCRIPTION_NAME)"
              addSpnToEnvironment: true
              scriptType: "bash"
              scriptLocation: "inlineScript"
              inlineScript: |
                az appservice plan create --resource-group $(APP_NAME)-rg --name $(APP_NAME)-asp --is-linux
              displayName: "App Service Plan - Use Azure CLI to setup or check"
          - task: AzureCLI@2
            inputs:
              azureSubscription: "$(SUBSCRIPTION_NAME)"
              addSpnToEnvironment: true
              scriptType: "bash"
              scriptLocation: "inlineScript"
              inlineScript: |
                az appservice plan create --resource-group $(APP_NAME)-rg --plan $(APP_NAME)-as --name $(APP_NAME) --deployment-container-image-name $(ACR_NAME).azurecr.io/$(IMAGE_NAME):latest
              displayName: "Web App - Use Azure CLI to setup or check"
          - task: AzureCLI@2
            inputs:
              azureSubscription: "$(SUBSCRIPTION_NAME)"
              addSpnToEnvironment: true
              scriptType: "bash"
              scriptLocation: "inlineScript"
              inlineScript: |
                az webapp config appsettings set --resource-group $(APP_NAME)-rg --name $(APP_NAME) --settings $(APP_SETTINGS)
              displayName: "Web App - Use Azure CLI to configure the settings"
          - task: AzureCLI@2
            inputs:
              azureSubscription: "$(SUBSCRIPTION_NAME)"
              addSpnToEnvironment: true
              scriptType: "bash"
              scriptLocation: "inlineScript"
              inlineScript: |
                az webapp identity assign --resource-group $(APP_NAME)-rg --name $(APP_NAME)
              displayName: "Web App - Use Azure CLI to assign an identity"
          - task: AzureCLI@2
            inputs:
              azureSubscription: "$(SUBSCRIPTION_NAME)"
              addSpnToEnvironment: true
              scriptType: "bash"
              scriptLocation: "inlineScript"
              inlineScript: |
                az role assignment create --assignee $(az webapp identity show  --resource-group $(APP_NAME)-rg --name $(APP_NAME) --query principalId --output tsv) --scope /subscriptions/$(az account show --query id --output tsv)/resourceGroups/$(APP_NAME)-rg/providers/Microsoft.ContainerRegistry/registries/$(ACR_NAME) --role "AcrPull"
              displayName: "Web App - Use Azure CLI to assign an identity"

  - stage: "DeployImage"
    displayName: "Deploy the image" # friendly name to display in the UI
    dependsOn:
      - "SetupRGACR"
      - "BuildContainer"
      - "SetupAppServices"
    jobs:
      - job: "DeployImage"
        displayName: "App Service - Deploy the latest image"
        steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: "$(SUBSCRIPTION_NAME)"
              addSpnToEnvironment: true
              scriptType: "bash"
              scriptLocation: "inlineScript"
              inlineScript: |
                az webapp config container set --resource-group $(APP_NAME)-rg --name $(APP_NAME) --docker-custom-image-name $(ACR_NAME).azurecr.io/$(IMAGE_NAME):latest --docker-registry-server-url https://$(ACR_NAME).azurecr.io
              displayName: "App Service Plan - Use Azure CLI to setup or check"
